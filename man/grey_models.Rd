% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grey_models.R
\name{grey_models}
\alias{grey_models}
\alias{GM11}
\alias{GM1N}
\alias{DGM21}
\alias{verhulst}
\title{Grey Prediction Models}
\usage{
GM11(X)

GM1N(dat, new_data = NULL)

DGM21(X)

verhulst(X)
}
\arguments{
\item{X}{For \code{GM11}, \code{DGM21}, \code{verhulst}: Numeric vector of original time series data.}

\item{dat}{For \code{GM1N}: Data frame or matrix, last column is characteristic series, others are related factors.}
}
\value{
For \code{GM11}: List with fitted values (\code{fitted}), next prediction (\code{pnext}), prediction function (\code{f}), matrix (\code{mat}), parameters (\code{u}), level ratios (\code{lambda}), and range (\code{rng}).
For \code{GM1N}: List with fitted values (\code{fitted}), posterior variance ratio (\code{C}), small error probability (\code{P}), and prediction function (\code{f}).
For \code{DGM21}, \code{verhulst}: List with fitted values (\code{fitted}), next prediction (\code{pnext}), prediction function (\code{f}), matrix (\code{mat}), and parameters (\code{u}).
}
\description{
Implements grey prediction models for time series forecasting:
\code{GM11} applies the GM(1,1) model with level ratio test.
\code{GM1N} applies the GM(1,N) model with multiple related factors.
\code{DGM21} applies the DGM(2,1) model for second-order dynamics.
\code{verhulst} applies the Verhulst model for logistic growth.
}
\examples{
# Sample time series for GM11, DGM21, Verhulst
x = c(100, 120, 145, 175, 210)

# GM11
result = GM11(x)
result$fitted    # Fitted values
result$pnext     # Next prediction
result$f(6:8)    # Predict next 3 periods

# DGM21
x = c(2.874,3.278,3.39,3.679,3.77,3.8)
result = DGM21(x)
result$fitted    # Fitted values
result$pnext     # Next prediction
result$f(6:8)    # Predict next 3 periods

# Verhulst
x = c(4.93,2.33,3.87,4.35,6.63,7.15,5.37,6.39,7.81,8.35)
result = verhulst(x)
result$fitted    # Fitted values
result$pnext     # Next prediction
result$f(6:8)    # Predict next 3 periods

# Sample data for GM1N
data = data.frame(
  factor1 = c(50, 55, 60, 65, 70),
  factor2 = c(20, 22, 25, 28, 30),
  output = c(100, 120, 145, 175, 210)
)
result = GM1N(data)
result$fitted

}
