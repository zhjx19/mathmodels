% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/system_evaluation.R
\name{system_evaluation}
\alias{system_evaluation}
\alias{coupling_degree}
\alias{obstacle_degree}
\title{System Evaluation Functions for Coupling and Obstacle Analysis}
\usage{
coupling_degree(data, w = NULL, id_cols = NULL)

obstacle_degree(data, w = NULL, id_cols = NULL)
}
\arguments{
\item{data}{A numeric matrix or data frame with normalized scores (usually in \link{0,1}) as columns.}

\item{w}{Optional vector of weights for indicators or subsystems; defaults to equal weights if NULL.}

\item{id_cols}{Optional character vector of column names in \code{data} to preserve as identifiers (not used in calculations).}
}
\value{
A tibble depending on the function:
\describe{
\item{coupling_degree}{A tibble with columns:
\itemize{
\item \code{ID}: Identifier columns specified by \code{id_cols} (if provided).
\item \code{coupling}: Coupling Degree (range 0-1).
\item \code{coord}: Coordination Index (range 0-1).
\item \code{coupling_coord}: Coupling Coordination Degree (range 0-1).
}
}
\item{obstacle_degree}{A tibble with:
\itemize{
\item \code{ID}: Identifier columns specified by \code{id_cols} (if provided).
\item Columns for secondary indicator obstacle degrees (\eqn{O_{ij} = (1 - X_{ij}) \cdot w_{ij}}).
}
Suitable for grouping and summarizing (e.g., with tidyverse) to compute primary indicator obstacle degrees (\( U_i \)).
}
}
}
\description{
These functions provide tools for system-level evaluation in multi-indicator systems:

\itemize{
\item \code{coupling_degree()}: Computes coupling degree, coordination index, and coupling coordination degree for subsystems.
\item \code{obstacle_degree()}: Computes obstacle degrees for secondary indicators to identify key constraints in the system, enabling batch processing with tidyverse for grouping and summarization.
}
}
\examples{
# Sample normalized subsystem scores
df = data.frame(
  s1 = c(0.0162, 0.1782, 0.5490, 0.6730, 0.0207, 0.9875),
  s2 = c(0.2720, 0.6824, 0.0593, 0.4812, 0.8891, 0.5573)
)
# Coupling Degree Analysis
coupling_degree(df)        # Equal weights
coupling_degree(df, c(0.6, 0.4))
# Obstacle Degree Analysis
obstacle_degree(df)        # Equal weights
obstacle_degree(df, c(0.6, 0.4))

}
