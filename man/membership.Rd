% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/membership.R
\name{membership}
\alias{membership}
\alias{tri_mf}
\alias{trap_mf}
\alias{gauss_mf}
\alias{gbell_mf}
\alias{gauss2mf}
\alias{sigmoid_mf}
\alias{dsigmoid_mf}
\alias{psigmoid_mf}
\alias{z_mf}
\alias{pi_mf}
\alias{s_mf}
\alias{plot_mf}
\title{Membership Functions for Fuzzy Logic}
\usage{
tri_mf(x, params)

trap_mf(x, params)

gauss_mf(x, params)

gbell_mf(x, params)

gauss2mf(x, params)

sigmoid_mf(x, params)

dsigmoid_mf(x, params)

psigmoid_mf(x, params)

z_mf(x, params)

pi_mf(x, params)

s_mf(x, params)

plot_mf(mf, xlim = c(0, 10), main = NULL)
}
\arguments{
\item{x}{Numeric vector, input values for which to compute membership.}

\item{params}{Numeric vector, parameters defining the membership function:
\itemize{
\item For \code{tri_mf}: \code{c(a, b, c)}, where \code{a <= b <= c} (left base, peak, right base).
\item For \code{trap_mf}: \code{c(a, b, c, d)}, where \code{a <= b <= c <= d} (left base, left top, right top, right base).
\item For \code{gauss_mf}: \code{c(sigma, c)}, where \code{sigma > 0} (spread, center).
\item For \code{gbell_mf}: \code{c(a, b, c)}, where \code{a > 0}, \code{b > 0} (width, shape, center).
\item For \code{gauss2mf}: \code{c(s1, c1, s2, c2)}, where \code{s1 > 0}, \code{s2 > 0} (left spread, left center, right spread, right center).
\item For \code{sigmoid_mf}: \code{c(a, b)}, where \code{a > 0} (slope, inflection point).
\item For \code{dsigmoid_mf}: \code{c(a1, c1, a2, c2)}, where \code{a1 > 0}, \code{a2 > 0} (slopes and inflection points for two sigmoids).
\item For \code{psigmoid_mf}: \code{c(a1, c1, a2, c2)}, where \code{a1 > 0}, \code{a2 > 0} (slopes and inflection points for two sigmoids).
\item For \code{z_mf}: \code{c(a, b)}, where \code{a < b} (left base, right base).
\item For \code{pi_mf}: \code{c(a, b, c, d)}, where \code{a < b < c < d} (left base, left shoulder, right shoulder, right base).
\item For \code{s_mf}: \code{c(a, b)}, where \code{a < b} (left base, right base).
}}

\item{mf}{Function, a membership function with fixed parameters (e.g., \code{function(x) tri_mf(x, c(2, 5, 8))}).}

\item{xlim}{Numeric vector of length 2, x-axis limits for plotting (default \code{c(0, 10)}).}

\item{main}{Character, plot title (default \code{NULL}, no title).}
}
\value{
\itemize{
\item For membership functions (\code{tri_mf}, \code{trap_mf}, \code{gauss_mf}, \code{gbell_mf}, \code{gauss2mf}, \code{sigmoid_mf}, \code{dsigmoid_mf}, \code{psigmoid_mf}, \code{z_mf}, \code{pi_mf}, \code{s_mf}): A numeric vector of membership values in \link{0, 1}, same length as \code{x}.
\item For \code{plot_mf}: A ggplot2 object, plotting the membership function.
}
}
\description{
A collection of functions to compute membership values for various fuzzy sets, including triangular, trapezoidal, Gaussian, generalized bell, two-parameter Gaussian, sigmoid, difference of sigmoids, product of sigmoids, Z-shaped, PI-shaped, and S-shaped membership functions. Includes a function to visualize membership functions using ggplot2. These are designed for evaluation models in mathematical modeling, compatible with \code{fuzzy_eval} in the \code{mathmodels} package.
}
\details{
These functions support evaluation models in mathematical modeling:
\itemize{
\item \code{tri_mf}: Triangular membership, linear rise from \code{a} to \code{b} (peak) and fall to \code{c}.
\item \code{trap_mf}: Trapezoidal membership, linear rise from \code{a} to \code{b}, plateau from \code{b} to \code{c}, fall to \code{d}.
\item \code{gauss_mf}: Gaussian membership, bell-shaped curve centered at \code{c} with spread \code{sigma}.
\item \code{gbell_mf}: Generalized bell membership, bell-shaped curve with width \code{a}, shape \code{b}, and center \code{c}.
\item \code{gauss2mf}: Two-parameter Gaussian membership, combining two Gaussians with spreads \code{s1}, \code{s2} and centers \code{c1}, \code{c2}.
\item \code{sigmoid_mf}: Sigmoid membership, S-shaped curve with slope \code{a} and inflection point \code{b}.
\item \code{dsigmoid_mf}: Difference of two sigmoids, combining slopes \code{a1}, \code{a2} and inflection points \code{c1}, \code{c2}.
\item \code{psigmoid_mf}: Product of two sigmoids, combining slopes \code{a1}, \code{a2} and inflection points \code{c1}, \code{c2}.
\item \code{z_mf}: Z-shaped membership, decreasing from 1 at \code{a} to 0 at \code{b}.
\item \code{pi_mf}: PI-shaped membership, rising from \code{a} to \code{b}, plateau from \code{b} to \code{c}, falling to \code{d}.
\item \code{s_mf}: S-shaped membership, increasing from 0 at \code{a} to 1 at \code{b}.
\item \code{plot_mf}: Plots a membership function over \code{xlim} using ggplot2, suitable for tidyverse workflows.
}
Membership values can be used to construct fuzzy evaluation matrices for \code{fuzzy_eval}.
Implemented in base R, except \code{plot_mf}, which requires ggplot2.
}
\examples{
# Define input values
x = 0:10

# Triangular membership
tri_mf(x, params = c(3, 6, 8))

# Trapezoidal membership
trap_mf(x, params = c(1, 5, 7, 8))

# Gaussian membership
gauss_mf(x, params = c(2, 5))

# Generalized bell membership
gbell_mf(x, params = c(2, 4, 6))

# Two-parameter Gaussian membership
gauss2mf(x, params = c(1, 3, 3, 4))

# Sigmoid membership
sigmoid_mf(x, params = c(2, 4))

# Difference of sigmoids membership
dsigmoid_y = dsigmoid_mf(x, params = c(5, 2, 5, 7))

# Product of sigmoids membership
psigmoid_mf(x, params = c(2, 3, -5, 8))

# Z-shaped membership
z_mf(x, params = c(3, 7))

# PI-shaped membership
pi_mf(x, params = c(1, 4, 5, 10))

# S-shaped membership
s_mf(x, params = c(1, 8))

\dontrun{
# Visualize membership functions
plot_mf(\(x) tri_mf(x, c(3, 6, 8)), main = "Triangular MF")
plot_mf(\(x) trap_mf(x, c(1, 5, 7, 8)), main = "Trapezoidal MF")
plot_mf(\(x) gauss_mf(x, c(2, 5)), main = "Gaussian MF")
plot_mf(\(x) gbell_mf(x, c(2, 4, 6)), main = "Generalized Bell MF")
plot_mf(\(x) gauss2mf(x, c(1, 3, 3, 4)), main = "Two-Parameter Gaussian MF")
plot_mf(\(x) sigmoid_mf(x, c(2, 4)), main = "Sigmoid MF")
plot_mf(\(x) dsigmoid_mf(x, c(5, 2, 5, 7)), main = "Difference of Sigmoids MF")
plot_mf(\(x) psigmoid_mf(x, c(2, 3, -5, 8)), main = "Product of Sigmoids MF")
plot_mf(\(x) z_mf(x, c(3, 7)), main = "Z-Shaped MF")
plot_mf(\(x) pi_mf(x, c(1, 4, 5, 10)), main = "PI-Shaped MF")
plot_mf(\(x) s_mf(x, c(1, 8)), main = "S-Shaped MF")
}

}
