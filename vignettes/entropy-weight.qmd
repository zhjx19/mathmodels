---
title: "Entropy Weight Method"
vignette: >
  %\VignetteIndexEntry{Entropy Weight Method}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}
format:
  html:
    toc: true
    mathjax: true
    self-contained: true
knitr:
  opts_chunk:
    collapse: true
    comment: '#>'
---

在信息论中，**熵**是对不确定性的一种度量。不确定性越大，熵值越高，所包含的信息量也就越大；反之，不确定性越小，熵值越低，信息量也相应减少。

根据熵的这一特性，可以通过计算熵值来评估一个事件的随机性与无序程度。同时，熵值也可用于衡量某个指标的离散程度。指标的离散程度越大，其在综合评价体系中的影响（即权重）也就越大。例如，如果某一指标在所有样本中的取值完全相同，则该指标对综合评价没有任何区分作用，其提供的信息量为零，因此对应的权重也应为零。

**熵权法**，是一种基于数据本身分布特征的客观赋权方法，其核心思想是依据各指标的信息熵来确定权重，从而避免主观因素的干扰，具有较强的科学性与合理性。

## 算法步骤

设有 $n$ 个评价对象，$m$ 个评价指标，形成原始指标数据矩阵，其中 $x_{ij}$ 表示第 $i$ 个评价对象第 $j$ 个指标的值。

#### (1) 数据归一化

由于不同指标通常具有不同的量纲和数量级，为了消除其影响，需要进行归一化处理。

- 对于正向指标（越大越好）：
$$
x'_{ij} = \dfrac{x_{ij} - \min\limits_i x_{ij}}{\max\limits_i x_{ij} - \min\limits_i x_{ij}}
$$
- 对于 负向指标（越小越好）：
$$
x'_{ij} = \dfrac{\max\limits_i x_{ij} - x_{ij} }{\max\limits_i x_{ij} - \min\limits_i x_{ij}}
$$
其中，$\min_ix_{ij}$ 和 $\max_ix_{ij}$ 分别是第 $j$ 个指标所有样本值中的最小值和最大值。

注意，熵权法中涉及 $\ln(\cdot)$ 运算，所以归一化不能出现 $0$ 和 $1$，为此，归一化时把 $[0,1]$ 稍微收缩一下，比如到 $[0.002,0.998]$。

为了方便起见，归一化后的数据 $x_{ij}^{\prime}$ 仍记为 $x_{ij}$。

**注：**归一化更适合应用到近似服从均匀分布的数据；也可以使用标准化，标准化更适合应用到近似服从正态分布的数据，负向指标标准化后乘以 $-1$ 即可正向化。

#### (2)计算第 $j$ 个指标下第 $i$ 个样本值占该指标的比重

将标准化后的值 $x_{ij}$ 视为某种"概率贡献”，计算其在第 $j$ 个指标总“贡献”中的比重：
$$
p_{ij}=\dfrac{x_{ij}}{\sum_{i=1}^n x_{ij}}, \quad i=1,\, \cdots,\,n,\;j=1,\,\cdots,\,m
$$

#### (3) 计算第 $j$ 个指标的熵值

利用信息熵公式计算每个指标的信息熵：
$$
e_{j}=-k\sum_{i=1}^{n}p_{ij}\ln(p_{ij}),\quad j=1,\cdots,m
$$
其中，$k=1/\ln(n)>0$，满足 $e_{j} \geq 0$。

熵值 $e_{j}$ 反映了第 $j$个 指标下数据的离散程度，熵值 $e_{j}$ 越大，表明该指标提供的有用信息量越少。

#### (4) 计算信息熵冗余度（差异系数）

$$
d_{j}=1-e_{j},\quad j=1,\cdots,m
$$

差异系数反映了指标信息量的大小，$d_{j}$ 越大，表示第 $j$ 个指标值的离散程度越大（不确定性越小，信息量越大），该指标在综合评价中应赋予较大的权重。

#### (5) 计算各个指标的权重

将差异系数进行归一化处理，得到各指标的最终权重：
$$
w_j=\frac{d_j}{\sum_{j=1}^m d_j},\quad j=1,\,\cdots,\,m
$$
#### (6)（可选）计算各个评价对象的综合得分

$$
s_i=100 × \sum\limits_{j=1}^m w_j x_{ij}, \quad i=1,\,\cdots,\,n
$$
其中，$x_{ij}$ 为标准化后的数据。

## 案例：河流水质数据

加载包：

```{r message=FALSE}
library(tidyverse)
library(mathmodels)
```

### 准备数据

使用内置的 `water_quality` 数据来演示：

```{r}
water_quality 
```

这是 $20$ 条河流的水质数据，含氧量越高越好（正向指标）；PH 值越接近 $7$ 越好（居中型指标）；细菌总数越少越好（负向指标）；植物性营养物量介于 $10 \sim 20$ 之间最佳（区间型指标）。

### 数据预处理

借助 `mathmodels` 包提供的预处理函数，使用 `mutate()` 修改列即可。只需要处理居中型和区间型指标，因为指标归一化已内置到熵权法函数。

```{r}
df = water_quality |>
  mutate(PH = rescale_middle(PH, 7), 
         nutrient = rescale_interval(nutrient, 10, 20))
df
```


### 熵权法

用 `entropy_weight()` 函数实现用**熵权法**计算权重，该函数已内置归一化处理，基本语法：

```{r eval=FALSE}
entropy_weight(X, index = NULL, epsilon = 0.002)
```

- `index` 可以指定对哪些列做正向（`"+"`）、负向（`"-"`）、不做（`NA`）归一化，默认 `index = NULL` 表示，所有列都不做归一化。
- `epsilon` 是熵权法中避免出现 $0$ 和 $1$ 值的微调量，默认为 $0.002$。

本例已对指标列 `PH` 和 `nutrient` 事先做了归一化，故将指标方向设置为 `NA`，以不再重复做归一化，只是微调 $0$ 和 $1$ 值，避免熵权法计算时出现 $\ln(0)$。

```{r}
idx = c("+", NA, "-", NA)
res = entropy_weight(df[-1], idx)
```

- 查看指标权重：

```{r}
res$w
```


- 查看评价对象得分：

```{r}
res$s
```

- 对应到河流，增加排名列：

```{r}
tibble(ID = df$ID, score = res$s, rank = min_rank(-score)) |> 
  arrange(rank)
```

