---
title: "Grey Relational Analysis"
vignette: >
  %\VignetteIndexEntry{Grey Relational Analysis}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}
format:
  html:
    toc: true
    mathjax: true
knitr:
  opts_chunk:
    collapse: true
    comment: '#>'
---

**灰色关联分析**源于几何直观，实质上是一种曲线间几何形状的比较：几何形状越接近，则发展变化趋势越接近，关联程度就越大。

## 灰色关联度

### 数据无量纲处理

对单位不一，初值不同的序列，应首先进行初值化，即将该序列的所有数据分别除以首项数据，将变量化为无单位的相对数值。负向数据需要做正向化，若用取倒数变换，可以和初值化一起做，即用首项数据除以该所有数据；

或者，

- 做数据均值化，所有数据都除以均值
- 做数据百分比化，所有数据都除以最大值
- 做数据归一化


### 计算关联系数

设参考序列为
$$
X_0=\left\{x_0(1),x_0(2),\cdots,x_0(m)\right\}
$$

比较序列为
$$
X_i=\left\{x_i(1),x_i(2),\cdots,x_i(m)\right\},\quad i=1,\cdots,n
$$

比较序列 $X_i$ 对参考序列 $X_0$ 在 $k$ 处的关联系数定义为：
$$
\eta_i\left(k\right)=\frac{\min_s\min_t\left|x_0\left(t\right)-x_s\left(t\right)\right|+\rho\max_s\max_t\left|x_0\left(t\right)-x_s\left(t\right)\right|}{\left|x_0\left(k\right)-x_i\left(k\right)\right|+\rho\max_s\max_t\left|x_0\left(t\right)-x_s\left(t\right)\right|}
$$
其中，$\min_s\min_t\left|x_0(t)-x_s(t)\right|$ 和 $\max_s\max_t\left|x_0(t)-x_s(t)\right|$ 分别称为两级最小差、两级最大差；$\rho$ 称为分辨系数，越大分辨率越大，一般采用 $\rho=0.5$。

### 计算灰色关联度

关联系数只表示了各个位置参考序列和比较序列之间的关联程度，为了从总体上了解序列之间的关联程度，必须求出它们的平均值，即**灰色关联度**：
$$
r_i=\frac{1}{n}\sum_{k=1}^n\eta_i(k)
$$
若各指标有不同的权重，可以对进行加权平均，得到灰色加权关联度。

结果解读：

- $r \in [0, 0.35)$，称为弱关联
- $r \in (0.35, 0.65)$，称为中度关联
- $r \in [0.65, 1]$，称为强关联

加载包：

```{r message=FALSE}
library(tidyverse)
library(mathmodels)
```

## 案例 1：运动员训练与成绩

对某健将级女子铅球运动员的跟踪调查，获得其 1982 年至 1986 年每年最好成绩及 16 项专项素质和身体素质的数据，做灰色关联分析，看哪些指标与铅球成绩关联度更高？

### 创建数据

```{r}
sports = tibble(
  年份 = 1982:1986,
  铅球 = c(13.6, 14.01, 14.54, 15.64, 15.69),
  `4kg前抛` = c(11.5, 13, 15.15, 15.3, 15.02),
  `4kg后抛` = c(13.76, 16.36, 16.9, 16.56, 17.3),
  `4kg原地` = c(12.41, 12.7, 13.96, 14.04, 13.46),
  立定跳远 = c(2.48, 2.49, 2.56, 2.64, 2.59),
  高翻 = c(85, 85, 90, 100, 105),
  抓举 = c(55, 65, 75, 80, 80),
  卧推 = c(65, 70, 75, 85, 90),
  `3kg前抛` = c(12.8, 15.3, 16.24, 16.4, 17.05),
  `3kg后抛` = c(15.3, 18.4, 18.75, 17.95, 19.3),
  `3kg原地` = c(12.71, 14.5, 14.66, 15.58, 15.7),
  `3kg滑步` = c(14.78, 15.54, 16.03, 16.87, 17.82),
  三级跳 = c(7.64, 7.56, 7.76, 7.54, 7.7),
  全蹲 = c(120, 125, 130, 140, 140),
  挺举 = c(80, 85, 90, 90, 95),
  `30米跑` = c(4.2, 4.25, 4.1, 4.06, 3.99),
  `100米跑` = c(13.1, 13.42, 12.85, 12.72, 12.56))
sports
```

### 无量纲化处理

```{r}
sports = sports |> 
  mutate(across(2:16, rescale_initial),
         across(17:18, \(x) rescale_initial(x, "-")))
sports
```

### 计算灰色关联度

`mathmodel` 包提供了 `grey_corr()` 函数实现计算灰色关联度，基本语法：

```{r eval = FALSE}
grey_corr(ref, cmp, rho = 0.5, w = NULL)
```

- `ref` 为参考序列
- `cmp` 为比较序列
- `rho` 为分辨系数
- `w` 为指标权重向量

采用默认分辨系数，不提供指标权重：

```{r}
res = grey_corr(sports[[2]], sports[,3:18])
```

- 将结果转化为数据框，并排序：

```{r}
enframe(res, value = "gcd") |> 
  arrange(-gcd)
```

## 案例 2：投资产出优势分析

灰色关联分析的参考序列只有 $1$ 个，当参考序列不止 $1$ 个时，让比较序列和各个参考序列都做一遍灰色关联分析，得到灰色关联度矩阵，叫作**优势分析**。

设有 $m$ 个参考序列，$l$ 个比较序列，则这 $l$ 个比较序列对每一个参考序列都有 $1$ 个关联度，记 $r_ij$ 表示第 $j$ 个比较序列对第 $i$ 个参考序列的关联度，可得到关联度矩阵 $R = (r_{ij})_m \times l$。

根据矩阵 $R$ 的各元素的大小，可分析判断出哪些因素起主要影响（优势因素），哪些因素起次要影响。

### 创建数据

```{r}
economy = tibble(
  year = 1979:1983,
  x1 = c(308.58, 310, 295, 346, 367),
  x2 = c(195.4, 189.9, 187.2, 205, 222.7),
  x3 = c(24.6, 21, 12.2, 15.1, 14.57),
  x4 = c(20, 25.6, 23.3, 29.2, 30),
  x5 = c(18.98, 19, 22.3, 23.5, 27.655),
  y1 = c(170, 174, 197, 216.4, 235.58),
  y2 = c(57.55, 70.74, 76.8, 80.7, 89.85),
  y3 = c(88.56, 70, 85.38, 99.83, 103.4),
  y4 = c(11.19, 13.28, 16.82, 18.9, 22.8),
  y5 = c(4.03, 4.26, 4.34, 5.06, 5.78),
  y6 = c(13.7, 15.6, 13.77, 11.98, 13.95))
economy
```

### 无量纲化处理

```{r}
economy = economy |> 
  mutate(across(-1, rescale_initial))
economy
```

### 优势分析：批量计算灰色关联度

```{r}
map_dfc(economy[7:12], \(x) grey_corr(x, economy[2:6])) |> 
  mutate(`投资/产出` = names(economy)[2:6], .before = 1)
```

## 灰色关联评价

**灰色关联评价**，类似于理想解法，算法步骤如下：

- 对指标数据预处理：一致化、规范化后，得到规范矩阵；
- 由于各个指标对综合评价的权重不同，需要根据指标权重对规范矩阵做加权，得到加权规范矩阵；
- 构造参考样本，为“正理想样本”，即各个指标取最大值，构成的最佳样本；
- 将每个样本（评价对象）看作是比较序列，将参考样本作为参考序列，代入灰色关联分析算法，计算灰色关联度。
- 根据该灰色关联度，就可以排序或评价样本的优劣。

以评价河流水质为例。

### 数据预处理

- 只将中间型、区间型指标做归一化：

```{r}
df = water_quality |>
  mutate(PH = rescale_middle(PH, 7),
         nutrient = rescale_interval(nutrient, 10, 20))
```

### 指标权重：熵权法

已经归一化的指标，不必重复做归一化：

```{r}
idx = c("+", NA, "-", NA)
res = entropy_weight(df[2:5], idx)   
```

### 灰色关联评价

`mathmodels` 包提供了 `grey_corr_topsis()` 函数实现灰色关联 `TOPSIS` 法，基本语法：

```{r eval=FALSE}
grey_corr_topsis(X, w, index = NULL, rho = 0.5)
```

- `X` 为决策矩阵
- `w` 为指标权重
- `index` 可以指定对哪些列做正向（`"+"`）、负向（`"-"`）、不做（`NA`）归一化，默认 `index = NULL` 表示，所有列都不做归一化。
- `rho` 为分辨系数

执行灰色关联 TOPSIS 评价，已经归一化的指标，不必重复做归一化：

```{r}
gcd = grey_corr_topsis(df[2:5], res$w, idx)
```

转化成 `0-100` 分数，增加排名列：

```{r}
tibble(ID = df$ID, gcd = gcd, score = rescale(gcd, b = 100),
       rank = min_rank(-score)) |>
  arrange(-score)
```
